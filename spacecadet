#!/bin/bash
#
# Utility script to generate/set/unset keybinding in X windows
# systems and make them "spacecadet" complient.
#
# Dependencies:
#   -xmodmap
#   -xdotool
#
# spacecadet 0.2
# Usage: spacecadet <command> [<args>]
#
# Most useful commands:
#   init        generate standard confing
#   start       start xcape using config~/.spacecadet
#   stop        remove keybindings and stop xcape
#   restart     restart xcape
set -euo pipefail

#CONSTANTS
readonly PROGNAME=$(basename "$0")
readonly ARGS="${*:-0}"
readonly DEPENDENCIES=(xmodmap xcape)

VERBOSE=false

#COLORS
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly ORANGE='\33[0;33m'
readonly NC='\033[0m'

## Display message if there dependencie is not installed
## Globals:
##  None
## Arguments:
##  $1 -> name of dep
## Returns;(
#  None
msg_install_dep() {
    printf "Please install ${RED}%s${NC} or make sure it is in your PATH.\n" "${1}"
}

## LOG
##
## Util funcitons that logs to stdout and respects verbose flag
## Globals:
##  VERBOSE
## Arguments:
##  Log message
## Returns:
##  None
log() {
  if ${VERBOSE}
  then
    printf "${GREEN}==>${NC} %s\n" "$1"
  fi
}

## Check if all needed dependencies are installed
## Globals:
##  DEPENDENCIES
## Arguments:
##  None
## Returns;(
##  None
check_dep() {
    local dep
    for dep in "${DEPENDENCIES[@]}"; do
      if ! which "${dep}" > /dev/null
      then
        msg_install_dep "${dep}"
        exit 1
      fi
    done
}

#USAGE

## Print usage
## Globals:
##  None
## Arguments:
##  None
## Returns;
##  None
print_usage() {
    cat <<- EOF

    usage : "${PROGNAME}" <command> [<args>]

    Utility script to generate/set/unset keybinding in X windows
    systems and make them 'spacecadet' complient.

    COMMANDS:

       start       start spacecadet
       stop        stop spacecadet
       restart     restart xcape

EOF
}

## RESTART
##
## check if xcape is running; kill all processes if running
## Globals:
##  None
## Arguments:
##  None
## Returns;
##  None
do_kill() {
    if [ "$(pgrep xcape > /dev/null)" != 0 ]
    then
        log "KILLING XCAPE"

        for process in $( pgrep xcape ); do
          kill "$process"
        done
    fi
}


## VERBOSE
##
## Set global verbose variable to true
## Globals:
##  VERBOSE
## Arguments:
##  None
## Returns;
##  None
do_verbose() {
  VERBOSE=true
}

## START XCAPE
##
## Change caps to esc; Mux CAPS with SHIFT; Mux SHIFT with Paren's
## Globals:
##  None
## Arguments:
##  None
## Returns;
##  None
do_start() {
    check_dep
    log "STARTING SPACECADET"

    setxkbmap -option 'caps:ctrl_modifier'
    xmodmap -e "keycode 107 = Super_R"
    xcape -e 'Caps_Lock=Escape;Control_L=Escape;Control_R=Escape'
    xcape -t 300 -e 'Shift_L=Shift_L|parenleft;Shift_R=Shift_R|parenright'
    xmodmap -e "keycode 9 = Caps_Lock NoSymbol Caps_Lock"
}


## Main
main() {

  case "${ARGS[0]}" in
  #    'init')                       do_init;;
      'start' | '-s')                do_start;;
      'restart' | '-r')              do_kill; do_start;;
      'stop')                        do_kill;;
      'help' | '--help' | '-h' | '') usage;;
      '-v')                          do_verbose;;
      *)                             print_usage; exit 1;;
  esac
}

main
